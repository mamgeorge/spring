\\github\spring_annotations\notes_java_versions.txt

Coding Paradigms [ imperative & declarative (functional)

	imperative: program is a sequence of statements that changes programs state until complete

		*Procedural programming: subtype where we construct programs using procedures or subroutines
		* OOP ObjectOriented programming: extends procedural programming concepts

	declarative: expresses computation logic without describing its control flow

		1 defines what the program has to achieve rather than how it should achieve it
		2 functional programming is a subset of the declarative programming languages

		characteristics of declarative programming include:

			* firstClass functions	functions that support all operations typically available to other entities
			* higherOrder functions	take function as arguments and can return function as a result
			* pure function			returns value based only on arguments without side effects (updating state)
			* monads				abstraction that wrap & transform values
			* currying				converts multiarg functions into singlearg function sequence; includes lambdas & closures
			* recursion				used to break down problems into smaller pieces
			* method references		have reference before :: and method name is after it

		https://www.geeksforgeeks.org/functional-programming-in-java-with-examples/
		https://www.infoworld.com/article/3314640/functional-programming-for-java-developers-part-1.html
]

Version Overview [ Descriptions are hi level summaries, not comprehensive lists

	Java 17 2021/09 -
	Java 16 2021/03 v60 Vector, C++, Elastic, moved to GitHub, C++14
	Java 15 2020/09 v59 Records, EdDSA, DatagramSocket, TextBlocks, ZGC
	Java 14 2020/03 v58 switch expressions, Packaging, NUMA, JFR Event Streaming,
	Java 13 2019/09 v57 Sockets update, CDS Archives, ZGC update
	Java 12 2019/03 v56 JVM constants, Shenandoah GC, Microbenchmark
	--------------
	Java 11 2018/09 v55 Dynamic Class-File Constants, HttpClient, TLS, ZGC, FlightRecorder
	Java 10 2018/03 v54 variable inference, GC interface, RootCertificates, Version timed, javah
	Java 09 2017/09 v53 Reactive_Streams, JShell, jlink, HiDPI graphics, modules
	Java 08 2014/03 v52 lambdas, Optional, Stream, CompletableFuture, mapReduce, Nahshorn; also method references, predefined functional interfaces
	--------------
	Java 07 2011/07 v51 switch strings, <> inference, Jigsaw
	Java 06 2006/12 v50 Rhino integration
	Java 05 2002/09 v49 generics, annotations, enumerations, varargs, autoBoxing, foreach, static, Scanner
	Java 04 2002/02 v48 assert, regex, NIO, Logging, Image, JAXP, JAAS
	Java 03 2000/05 v47 RMI, JNDI, HotSpot
	Java 02 1998/12 v46 or 1.2 Collections, Swing, CORBA
	Java 01 1997/02 v4? or 1.1 JavaBeans, JDBC, RMI, inner, reflection, AWT, JIT
	Java 1.0 1996/01 v?? or 1.0.2 released
]
----

