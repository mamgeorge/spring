package com.basics.securing.utils;

import com.opencsv.CSVWriter;
import com.opencsv.bean.ColumnPositionMappingStrategy;
import com.opencsv.bean.StatefulBeanToCsv;
import com.opencsv.bean.StatefulBeanToCsvBuilder;
import com.opencsv.exceptions.CsvException;
import com.basics.securing.model.Country;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.PrintWriter;
import java.util.List;

public class WriteCsvToResponse {
	//
	private static final Logger LOGGER = LoggerFactory.getLogger(WriteCsvToResponse.class);

	public static void writeCountries( PrintWriter writer, List<Country> countries) {
		//
		// "continent", "abbr", "country", "code2", "code3", "number"
		try {
			ColumnPositionMappingStrategy<Country> cpMappingStrategy = new ColumnPositionMappingStrategy<>();
			cpMappingStrategy.setType(Country.class);
			String[] columns = new String[]{ "id", "continent", "abbr", "country", "code2", "code3", "number" };
			cpMappingStrategy.setColumnMapping(columns);
			//
			StatefulBeanToCsv<Country> statefulBeanToCsv = new StatefulBeanToCsvBuilder<Country>(writer)
					.withQuotechar(CSVWriter.NO_QUOTE_CHARACTER)
					.withMappingStrategy(cpMappingStrategy)
					.withSeparator(',')
					.build();
			statefulBeanToCsv.write(countries);

		} 
		catch (CsvException ex) { LOGGER.error("Error mapping Bean to CSV", ex); }
	}

	public static void writeCountry( PrintWriter writer, Country country) {
		//
		try {
			ColumnPositionMappingStrategy<Country> cpMappingStrategy = new ColumnPositionMappingStrategy<>();
			cpMappingStrategy.setType(Country.class);
			String[] columns = new String[]{ "id", "continent", "abbr", "country", "code2", "code3", "number" };
			cpMappingStrategy.setColumnMapping(columns);
			//
			StatefulBeanToCsv<Country> statefulBeanToCsv = new StatefulBeanToCsvBuilder<Country>(writer)
					.withQuotechar(CSVWriter.NO_QUOTE_CHARACTER)
					.withMappingStrategy(cpMappingStrategy)
					.withSeparator(',')
					.build();
			statefulBeanToCsv.write(country);
		} 
		catch (CsvException ex) { LOGGER.error("Error mapping Bean to CSV", ex); }
	}
}
